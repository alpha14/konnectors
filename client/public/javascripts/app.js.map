{"version":3,"sources":["app/application.coffee","app/collections/konnectors.coffee","app/initialize.coffee","app/lib/app_helpers.coffee","app/lib/base_view.coffee","app/lib/request.coffee","app/lib/view_collection.coffee","app/models/konnector.coffee","app/router.coffee","app/views/app_view.coffee","app/views/konnector.coffee","app/views/konnector_listener.coffee","app/views/konnectors.coffee","app/views/templates/home.jade","app/views/templates/konnector.jade"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArhBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhJA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjlCA;AAAA","file":"public/javascripts/app.js","sourcesContent":["module.exports = {\n  initialize: function() {\n    var Router;\n    Router = require('router');\n    this.router = new Router();\n    Backbone.history.start();\n    if (typeof Object.freeze === 'function') {\n      return Object.freeze(this);\n    }\n  }\n};\n","var KonnectorsCollection,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nmodule.exports = KonnectorsCollection = (function(_super) {\n  __extends(KonnectorsCollection, _super);\n\n  function KonnectorsCollection() {\n    return KonnectorsCollection.__super__.constructor.apply(this, arguments);\n  }\n\n  KonnectorsCollection.prototype.model = require('../models/konnector');\n\n  KonnectorsCollection.prototype.url = 'konnectors/';\n\n  return KonnectorsCollection;\n\n})(Backbone.Collection);\n","var app;\n\napp = require('application');\n\n$(function() {\n  require('lib/app_helpers');\n  return app.initialize();\n});\n","(function() {\n  return (function() {\n    var console, dummy, method, methods, _results;\n    console = window.console = window.console || {};\n    method = void 0;\n    dummy = function() {};\n    methods = 'assert,count,debug,dir,dirxml,error,exception, group,groupCollapsed,groupEnd,info,log,markTimeline, profile,profileEnd,time,timeEnd,trace,warn'.split(',');\n    _results = [];\n    while (method = methods.pop()) {\n      _results.push(console[method] = console[method] || dummy);\n    }\n    return _results;\n  })();\n})();\n","var BaseView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nmodule.exports = BaseView = (function(_super) {\n  __extends(BaseView, _super);\n\n  function BaseView() {\n    return BaseView.__super__.constructor.apply(this, arguments);\n  }\n\n  BaseView.prototype.template = function() {};\n\n  BaseView.prototype.initialize = function() {};\n\n  BaseView.prototype.getRenderData = function() {\n    var _ref;\n    return {\n      model: (_ref = this.model) != null ? _ref.toJSON() : void 0\n    };\n  };\n\n  BaseView.prototype.render = function() {\n    this.beforeRender();\n    this.$el.html(this.template(this.getRenderData()));\n    this.afterRender();\n    return this;\n  };\n\n  BaseView.prototype.beforeRender = function() {};\n\n  BaseView.prototype.afterRender = function() {};\n\n  BaseView.prototype.destroy = function() {\n    this.undelegateEvents();\n    this.$el.removeData().unbind();\n    this.remove();\n    return Backbone.View.prototype.remove.call(this);\n  };\n\n  return BaseView;\n\n})(Backbone.View);\n","exports.request = function(type, url, data, callback) {\n  return $.ajax({\n    type: type,\n    url: url,\n    data: data != null ? JSON.stringify(data) : null,\n    contentType: \"application/json\",\n    dataType: \"json\",\n    success: function(data) {\n      if (callback != null) {\n        return callback(null, data);\n      }\n    },\n    error: function(data) {\n      if ((data != null) && (data.msg != null) && (callback != null)) {\n        return callback(new Error(data.msg));\n      } else if (callback != null) {\n        return callback(new Error(\"Server error occured\"));\n      }\n    }\n  });\n};\n\nexports.get = function(url, callback) {\n  return exports.request(\"GET\", url, null, callback);\n};\n\nexports.post = function(url, data, callback) {\n  return exports.request(\"POST\", url, data, callback);\n};\n\nexports.put = function(url, data, callback) {\n  return exports.request(\"PUT\", url, data, callback);\n};\n\nexports.del = function(url, callback) {\n  return exports.request(\"DELETE\", url, null, callback);\n};\n","var BaseView, ViewCollection,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('lib/base_view');\n\nmodule.exports = ViewCollection = (function(_super) {\n  __extends(ViewCollection, _super);\n\n  function ViewCollection() {\n    this.fetch = __bind(this.fetch, this);\n    this.removeItem = __bind(this.removeItem, this);\n    this.addItem = __bind(this.addItem, this);\n    return ViewCollection.__super__.constructor.apply(this, arguments);\n  }\n\n  ViewCollection.prototype.itemview = null;\n\n  ViewCollection.prototype.views = {};\n\n  ViewCollection.prototype.template = function() {\n    return '';\n  };\n\n  ViewCollection.prototype.itemViewOptions = function() {};\n\n  ViewCollection.prototype.collectionEl = null;\n\n  ViewCollection.prototype.onChange = function() {\n    return this.$el.toggleClass('empty', _.size(this.views) === 0);\n  };\n\n  ViewCollection.prototype.appendView = function(view) {\n    return this.$collectionEl.append(view.el);\n  };\n\n  ViewCollection.prototype.initialize = function() {\n    ViewCollection.__super__.initialize.apply(this, arguments);\n    this.views = {};\n    this.listenTo(this.collection, \"reset\", this.onReset);\n    this.listenTo(this.collection, \"add\", this.addItem);\n    this.listenTo(this.collection, \"remove\", this.removeItem);\n    return this.$collectionEl = $(this.collectionEl);\n  };\n\n  ViewCollection.prototype.render = function() {\n    var id, view, _ref;\n    _ref = this.views;\n    for (id in _ref) {\n      view = _ref[id];\n      view.$el.detach();\n    }\n    return ViewCollection.__super__.render.apply(this, arguments);\n  };\n\n  ViewCollection.prototype.afterRender = function() {\n    var id, view, _ref;\n    _ref = this.views;\n    for (id in _ref) {\n      view = _ref[id];\n      this.appendView(view.$el);\n    }\n    this.onReset(this.collection);\n    return this.onChange(this.views);\n  };\n\n  ViewCollection.prototype.remove = function() {\n    this.onReset([]);\n    return ViewCollection.__super__.remove.apply(this, arguments);\n  };\n\n  ViewCollection.prototype.onReset = function(newcollection) {\n    var id, view, _ref;\n    _ref = this.views;\n    for (id in _ref) {\n      view = _ref[id];\n      view.remove();\n    }\n    return newcollection.forEach(this.addItem);\n  };\n\n  ViewCollection.prototype.addItem = function(model) {\n    var options, view;\n    options = _.extend({}, {\n      model: model\n    }, this.itemViewOptions(model));\n    view = new this.itemview(options);\n    this.views[model.cid] = view.render();\n    this.appendView(view);\n    return this.onChange(this.views);\n  };\n\n  ViewCollection.prototype.removeItem = function(model) {\n    this.views[model.cid].remove();\n    delete this.views[model.cid];\n    return this.onChange(this.views);\n  };\n\n  ViewCollection.prototype.fetch = function(options) {\n    return this.collection.fetch(options);\n  };\n\n  return ViewCollection;\n\n})(BaseView);\n","var KonnectorModel,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nmodule.exports = KonnectorModel = (function(_super) {\n  __extends(KonnectorModel, _super);\n\n  function KonnectorModel() {\n    return KonnectorModel.__super__.constructor.apply(this, arguments);\n  }\n\n  KonnectorModel.prototype.rootUrl = \"konnectors/\";\n\n  return KonnectorModel;\n\n})(Backbone.Model);\n","var AppView, Router,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nAppView = require('views/app_view');\n\nmodule.exports = Router = (function(_super) {\n  __extends(Router, _super);\n\n  function Router() {\n    return Router.__super__.constructor.apply(this, arguments);\n  }\n\n  Router.prototype.routes = {\n    '': 'main'\n  };\n\n  Router.prototype.main = function() {\n    var mainView;\n    mainView = new AppView();\n    return mainView.render();\n  };\n\n  return Router;\n\n})(Backbone.Router);\n","var AppView, BaseView, Konnectors,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nKonnectors = require('./konnectors');\n\nmodule.exports = AppView = (function(_super) {\n  __extends(AppView, _super);\n\n  function AppView() {\n    return AppView.__super__.constructor.apply(this, arguments);\n  }\n\n  AppView.prototype.el = 'body.application';\n\n  AppView.prototype.template = require('./templates/home');\n\n  AppView.prototype.afterRender = function() {\n    var konnectors;\n    konnectors = new Konnectors();\n    konnectors.render();\n    return konnectors.fetch();\n  };\n\n  return AppView;\n\n})(BaseView);\n","var BaseView, KonnectorView, request,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nrequest = require('../lib/request');\n\nmodule.exports = KonnectorView = (function(_super) {\n  __extends(KonnectorView, _super);\n\n  function KonnectorView() {\n    this.selectPath = __bind(this.selectPath, this);\n    this.onImportClicked = __bind(this.onImportClicked, this);\n    this.afterRender = __bind(this.afterRender, this);\n    return KonnectorView.__super__.constructor.apply(this, arguments);\n  }\n\n  KonnectorView.prototype.template = require('./templates/konnector');\n\n  KonnectorView.prototype.className = 'konnector';\n\n  KonnectorView.prototype.events = {\n    \"click .import-button\": \"onImportClicked\"\n  };\n\n  KonnectorView.prototype.afterRender = function() {\n    var fieldHtml, importInterval, intervals, isImporting, key, lastImport, name, selected, slug, val, value, values, _ref;\n    slug = this.model.get('slug');\n    lastImport = this.model.get('lastImport');\n    isImporting = this.model.get('isImporting');\n    this.$el.addClass(\"konnector-\" + slug);\n    if (isImporting) {\n      this.$('.last-import').html('importing...');\n    } else if (lastImport != null) {\n      this.$('.last-import').html(moment(lastImport).format('LLL'));\n    } else {\n      this.$('.last-import').html(\"no import performed.\");\n    }\n    values = this.model.get('fieldValues');\n    if (values == null) {\n      values = {};\n    }\n    _ref = this.model.get('fields');\n    for (name in _ref) {\n      val = _ref[name];\n      if (values[name] == null) {\n        values[name] = \"\";\n      }\n      fieldHtml = \"<div class=\\\"field line\\\">\\n<div><label for=\\\"\" + slug + \"-\" + name + \"-input\\\">\" + name + \"</label></div>\";\n      if (val === 'folder') {\n        fieldHtml += \"<div><select id=\\\"\" + slug + \"-\" + name + \"-input\\\" class=\\\"folder\\\"\\n             value=\\\"\" + values[name] + \"\\\"></select></div>\\n</div>\";\n      } else {\n        fieldHtml += \"<div><input id=\\\"\" + slug + \"-\" + name + \"-input\\\" type=\\\"\" + val + \"\\\"\\n            value=\\\"\" + values[name] + \"\\\"/></div>\\n</div>\";\n      }\n      this.$('.fields').append(fieldHtml);\n    }\n    importInterval = this.model.get('importInterval');\n    if (importInterval == null) {\n      importInterval = '';\n    }\n    intervals = {\n      none: \"None\",\n      hour: \"Every Hour\",\n      day: \"Every Day\",\n      week: \"Every Week\",\n      month: \"Each month\"\n    };\n    fieldHtml = \"<div class=\\\"field line\\\">\\n<div><label for=\\\"\" + slug + \"-autoimport-input\\\">Auto Import</label></div>\\n<div><select id=\\\"\" + slug + \"-autoimport-input\\\" class=\\\"autoimport\\\">\";\n    for (key in intervals) {\n      value = intervals[key];\n      selected = importInterval === key ? 'selected' : '';\n      fieldHtml += \"<option value=\\\"\" + key + \"\\\" \" + selected + \">\" + value + \"</option>\";\n    }\n    fieldHtml += \"</select></div>\\n</div>\";\n    return this.$('.fields').append(fieldHtml);\n  };\n\n  KonnectorView.prototype.onImportClicked = function() {\n    var fieldValues, importInterval, name, slug, val, _ref;\n    fieldValues = {};\n    slug = this.model.get('slug');\n    _ref = this.model.get('fields');\n    for (name in _ref) {\n      val = _ref[name];\n      fieldValues[name] = $(\"#\" + slug + \"-\" + name + \"-input\").val();\n    }\n    this.model.set('fieldValues', fieldValues);\n    importInterval = 'none';\n    importInterval = $(\"#\" + slug + \"-autoimport-input\").val();\n    if (importInterval !== 'none') {\n      request.get('autoimport', (function(_this) {\n        return function(err, state) {\n          if (err) {\n            return console.log(err);\n          } else {\n            if (state === false) {\n              return console.log(\"debug: auto-import not active\");\n            } else {\n              return console.log(\"debug: auto-import active\");\n            }\n          }\n        };\n      })(this));\n    }\n    this.model.set('importInterval', importInterval);\n    return this.model.save({\n      success: (function(_this) {\n        return function() {\n          return alert(\"import succeeded\");\n        };\n      })(this),\n      error: (function(_this) {\n        return function() {\n          return alert(\"import failed\");\n        };\n      })(this)\n    });\n  };\n\n  KonnectorView.prototype.selectPath = function() {\n    var name, slug, val, values, _ref, _results;\n    slug = this.model.get('slug');\n    _ref = this.model.get('fields');\n    _results = [];\n    for (name in _ref) {\n      val = _ref[name];\n      if (val === 'folder') {\n        values = this.model.get('fieldValues');\n        if (values == null) {\n          values = {};\n        }\n        _results.push(this.$(\"#\" + slug + \"-\" + name + \"-input\").val(values[name]));\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  return KonnectorView;\n\n})(BaseView);\n","var Konnector, KonnectorListener,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nKonnector = require('../models/konnector');\n\nmodule.exports = KonnectorListener = (function(_super) {\n  __extends(KonnectorListener, _super);\n\n  function KonnectorListener() {\n    return KonnectorListener.__super__.constructor.apply(this, arguments);\n  }\n\n  KonnectorListener.prototype.models = {\n    konnector: Konnector\n  };\n\n  KonnectorListener.prototype.events = ['konnector.update'];\n\n  KonnectorListener.prototype.onRemoteUpdate = function(model) {\n    var isImporting, slug;\n    isImporting = model.get('isImporting');\n    slug = model.get('slug');\n    if (isImporting) {\n      return $(\".konnector-\" + slug + \" .last-import\").html('importing...');\n    } else {\n      return $(\".konnector-\" + slug + \" .last-import\").html(moment().format('LLL'));\n    }\n  };\n\n  return KonnectorListener;\n\n})(CozySocketListener);\n","var KonnectorListener, KonnectorView, KonnectorsCollection, KonnectorsView, ViewCollection, request,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nrequest = require('../lib/request');\n\nViewCollection = require('../lib/view_collection');\n\nKonnectorsCollection = require('../collections/konnectors');\n\nKonnectorView = require('./konnector');\n\nKonnectorListener = require('./konnector_listener');\n\nmodule.exports = KonnectorsView = (function(_super) {\n  __extends(KonnectorsView, _super);\n\n  function KonnectorsView() {\n    return KonnectorsView.__super__.constructor.apply(this, arguments);\n  }\n\n  KonnectorsView.prototype.collectionEl = '#konnectors';\n\n  KonnectorsView.prototype.collection = new KonnectorsCollection();\n\n  KonnectorsView.prototype.itemview = KonnectorView;\n\n  KonnectorsView.prototype.afterRender = function() {\n    KonnectorsView.__super__.afterRender.apply(this, arguments);\n    this.remoteChangeListener = new KonnectorListener();\n    return this.remoteChangeListener.watch(this.collection);\n  };\n\n  KonnectorsView.prototype.fetch = function() {\n    return this.collection.fetch({\n      success: (function(_this) {\n        return function() {\n          return request.get('folders', function(err, paths) {\n            var cid, konnector, path, _i, _len, _ref, _results;\n            for (_i = 0, _len = paths.length; _i < _len; _i++) {\n              path = paths[_i];\n              $(\".folder\").append(\"<option value=\\\"\" + path + \"\\\">\" + path + \"</option>\");\n            }\n            _ref = _this.views;\n            _results = [];\n            for (cid in _ref) {\n              konnector = _ref[cid];\n              _results.push(konnector.selectPath());\n            }\n            return _results;\n          });\n        };\n      })(this)\n    });\n  };\n\n  return KonnectorsView;\n\n})(ViewCollection);\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"content\"><div class=\"line clearfix\"><img src=\"images/small_icon.png\" class=\"right\"/><h1>Konnectors</h1></div><div id=\"konnectors\"></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<!-- .konnector --><h2 class=\"name\">' + escape((interp = model.name) == null ? '' : interp) + '</h2><div class=\"description\">' + escape((interp = model.description) == null ? '' : interp) + ' </div><div class=\"fields\"></div><div class=\"buttons\"> <button class=\"import-button\">import</button></div><div class=\"status\">' + escape((interp = status) == null ? '' : interp) + '</div><div class=\"infos\"><div class=\"date\"> <span class=\"label\">Last import:&nbsp;</span><span class=\"last-import\"></span></div><div class=\"datas\">Imported data:&nbsp;');\n// iterate model.modelNames\n;(function(){\n  if ('number' == typeof model.modelNames.length) {\n\n    for (var $index = 0, $$l = model.modelNames.length; $index < $$l; $index++) {\n      var name = model.modelNames[$index];\n\nbuf.push('<a');\nbuf.push(attrs({ 'href':(\"/apps/databrowser/#search/all/\" + (name) + \"\"), 'target':(\"_blank\") }, {\"href\":true,\"target\":true}));\nbuf.push('> \\n' + escape((interp = name) == null ? '' : interp) + '</a>&nbsp;');\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in model.modelNames) {\n      $$l++;      var name = model.modelNames[$index];\n\nbuf.push('<a');\nbuf.push(attrs({ 'href':(\"/apps/databrowser/#search/all/\" + (name) + \"\"), 'target':(\"_blank\") }, {\"href\":true,\"target\":true}));\nbuf.push('> \\n' + escape((interp = name) == null ? '' : interp) + '</a>&nbsp;');\n    }\n\n  }\n}).call(this);\n\nbuf.push('</div></div>');\n}\nreturn buf.join(\"\");\n};"]}